{"version":3,"sources":["component/Ui/Templates/SideBar/index.tsx","component/features/Note/models/actions.ts","component/Ui/Molecules/Modal.tsx","component/Ui/Molecules/Table.tsx","component/Ui/Atoms/Button.tsx","component/Ui/Atoms/Input/index.tsx","component/Ui/Organisms/Content/Viewer/index.tsx","component/features/Note/View/index.tsx","component/Ui/Organisms/Content/Editor/index.tsx","component/features/Note/Edit/index.tsx","component/features/Note/Case/index.tsx","component/features/Note/List/index.tsx","component/Ui/Templates/ContentNote/index.tsx","component/pages/Notes.tsx","App.tsx","backend/index.js","component/features/Note/models/reducer.ts","component/features/Note/models/store.ts","index.tsx"],"names":["Sider","Layout","SideBar","notesList","useSelector","state","notesReducer","notes","map","note","Item","key","id","to","className","activeClassName","title","style","overflow","height","position","left","theme","mode","defaultSelectedKeys","nextId","Actions","content","type","payload","Modal","visibleModal","setVisibleModal","contentModal","accessDelete","visible","onOk","onCancel","Table","onChange","value","options","autofocus","spellChecker","Button","onClick","props","Input","placeholder","required","Viewer","onDelete","onEdit","titleModal","danger","source","View","setEditMode","useState","setTitleModal","setContentModal","history","useHistory","dispatch","useDispatch","message","error","goBack","Editor","isCreate","inputContent","inputContentChange","tableContentChange","tableContent","clickCreate","clickSave","inputPHolder","inputClassName","Edit","setInputContent","simpleContent","setSimpleContent","e","currentTarget","noteId","console","log","push","success","Case","editMode","List","notesContentList","path","exact","render","Content","NoteContent","marginLeft","margin","padding","textAlign","Notes","useEffect","items","localStorage","getItem","JSON","parse","setItem","stringify","App","db","initialState","rootReducer","combineReducers","action","item","filter","store","createStore","applyMiddleware","thunk","dbReq","indexedDB","open","onupgradeneeded","event","target","result","createObjectStore","autoIncrement","onsuccess","getAndDisplayNotes","onerror","alert","errorCode","req","transaction","objectStore","openCursor","allNotes","cursor","continue","ReactDOM","document","getElementById"],"mappings":"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","file":"static/js/main.f00c8258.chunk.js","sourcesContent":["import React from 'react'\r\nimport { Layout, Menu } from 'antd'\r\nimport { NavLink } from 'react-router-dom'\r\nimport { useSelector } from 'react-redux'\r\nimport { AppStateType } from '../../../features/Note/models/store'\r\nimport nextId from 'react-id-generator'\r\nimport 'antd/dist/antd.css'\r\nimport './style.sass'\r\n\r\nconst { Sider } = Layout\r\n\r\nexport const SideBar = () => {\r\n\tconst notes = useSelector((state: AppStateType) => state.notesReducer.notes)\r\n\r\n\tconst notesList = notes.map((note) => {\r\n\t\treturn (\r\n\t\t\t<Menu.Item key={note.id}>\r\n\t\t\t\t<NavLink to={note.id} className={'note-item'} activeClassName='active'>\r\n\t\t\t\t\t{note.title}\r\n\t\t\t\t</NavLink>\r\n\t\t\t</Menu.Item>\r\n\t\t)\r\n\t})\r\n\r\n\treturn (\r\n\t\t<Sider\r\n\t\t\tstyle={{\r\n\t\t\t\toverflow: 'auto',\r\n\t\t\t\theight: '100vh',\r\n\t\t\t\tposition: 'fixed',\r\n\t\t\t\tleft: 0,\r\n\t\t\t}}\r\n\t\t>\r\n\t\t\t<Menu theme='dark' mode='inline' defaultSelectedKeys={['4']}>\r\n\t\t\t\t<Menu.Item key={nextId()}>\r\n\t\t\t\t\t<NavLink to={'/create'} className='create-note_item'>\r\n\t\t\t\t\t\tCreate New Note\r\n\t\t\t\t\t</NavLink>\r\n\t\t\t\t</Menu.Item>\r\n\t\t\t\t{notesList}\r\n\t\t\t</Menu>\r\n\t\t</Sider>\r\n\t)\r\n}\r\n","import { InferAtionsType } from './store'\r\n\r\nexport const ADD_NOTE = 'ADD_NOTE'\r\nexport const SAVE_NOTE = 'SAVE_NOTE'\r\nexport const DELETE_NOTE = 'DELTE_NOTE'\r\nexport const GET_NOTES = 'GET_NOTES'\r\nexport type ActionsType = InferAtionsType<typeof Actions>\r\n\r\nexport type PayloadType = {\r\n\ttitle: string\r\n\tcontent: string\r\n\tid: string\r\n}\r\n\r\nexport const Actions = {\r\n\taddNote: (title: string, content: string, id: string) =>\r\n\t\t({\r\n\t\t\ttype: ADD_NOTE,\r\n\t\t\tpayload: { title, content, id },\r\n\t\t} as const),\r\n\tsaveNote: (title: string, content: string, id: string) =>\r\n\t\t({\r\n\t\t\ttype: SAVE_NOTE,\r\n\t\t\tpayload: { title, content, id },\r\n\t\t} as const),\r\n\tdeleteNote: (id: string) =>\r\n\t\t({\r\n\t\t\ttype: DELETE_NOTE,\r\n\t\t\tpayload: { id },\r\n\t\t} as const),\r\n\tgetNote: (notes: Array<PayloadType>) =>\r\n\t\t({\r\n\t\t\ttype: GET_NOTES,\r\n\t\t\tpayload: notes,\r\n\t\t} as const),\r\n}\r\n","import React from 'react'\r\nimport { Modal as ModalA } from 'antd'\r\nimport 'antd/dist/antd.css'\r\n\r\ntype PropsType = {\r\n\tvisibleModal: boolean\r\n\tsetVisibleModal: React.Dispatch<React.SetStateAction<boolean>>\r\n\ttitle: string\r\n\tcontentModal: string\r\n\taccessDelete: () => void\r\n}\r\n\r\nexport const Modal: React.FC<PropsType> = ({\r\n\tvisibleModal,\r\n\tsetVisibleModal,\r\n\ttitle,\r\n\tcontentModal,\r\n\taccessDelete,\r\n}) => {\r\n\treturn (\r\n\t\t<ModalA\r\n\t\t\ttitle={title}\r\n\t\t\tvisible={visibleModal}\r\n\t\t\tonOk={accessDelete}\r\n\t\t\tonCancel={() => setVisibleModal(false)}\r\n\t\t>\r\n\t\t\t<p>{contentModal}</p>\r\n\t\t</ModalA>\r\n\t)\r\n}\r\n","import React from 'react'\r\nimport SimpleMDE from 'react-simplemde-editor'\r\n\r\ntype PropsType = {\r\n\tonChange: (value: string) => void\r\n\tvalue: string\r\n}\r\n\r\nexport const Table: React.FC<PropsType> = ({ onChange, value }) => {\r\n\treturn (\r\n\t\t<SimpleMDE\r\n\t\t\tonChange={onChange}\r\n\t\t\tvalue={value}\r\n\t\t\toptions={{\r\n\t\t\t\tautofocus: true,\r\n\t\t\t\tspellChecker: false,\r\n\t\t\t}}\r\n\t\t/>\r\n\t)\r\n}\r\n","import React from 'react'\r\nimport { Button as ButtonA } from 'antd'\r\n\r\ntype PropsType = {\r\n\ttype: 'link' | 'ghost' | 'default' | 'primary' | 'dashed' | undefined\r\n\tonClick: (e: React.MouseEvent<HTMLElement, MouseEvent>) => void\r\n\tcontent: string\r\n\tdanger: boolean\r\n}\r\n\r\nexport const Button: React.FC<PropsType> = ({ type, onClick, content, ...props }) => {\r\n\treturn (\r\n\t\t<ButtonA type={type} onClick={onClick} {...props}>\r\n\t\t\t{content}\r\n\t\t</ButtonA>\r\n\t)\r\n}\r\n","import React from 'react'\r\nimport { Input as InputA } from 'antd'\r\nimport './style.sass'\r\ntype PropsType = {\r\n\tplaceholder: string\r\n\tclassName: string\r\n\tonChange: (e: React.ChangeEvent<HTMLInputElement>) => void\r\n\tvalue: string\r\n}\r\n\r\nexport const Input: React.FC<PropsType> = ({\r\n\tplaceholder,\r\n\tclassName,\r\n\tonChange,\r\n\tvalue,\r\n}) => {\r\n\treturn (\r\n\t\t<InputA\r\n\t\t\tplaceholder={placeholder}\r\n\t\t\tclassName={`input ${className}`}\r\n\t\t\tonChange={onChange}\r\n\t\t\tvalue={value}\r\n\t\t\trequired\r\n\t\t/>\r\n\t)\r\n}\r\n","import React from 'react'\r\nimport { Modal } from '../../../Molecules/index'\r\nimport { Button } from '../../../Atoms/index'\r\nimport ReactMarkdown from 'react-markdown'\r\nimport './style.sass'\r\n\r\ntype PropsType = {\r\n\ttitle: string\r\n\tcontent: string\r\n\tonDelete: () => void\r\n\tonEdit: () => void\r\n\tvisibleModal: boolean\r\n\ttitleModal: string\r\n\tcontentModal: string\r\n\taccessDelete: () => void\r\n\tsetVisibleModal: React.Dispatch<React.SetStateAction<boolean>>\r\n}\r\n\r\nexport const Viewer: React.FC<PropsType> = ({\r\n\ttitle,\r\n\tcontent,\r\n\tonDelete,\r\n\tonEdit,\r\n\tvisibleModal,\r\n\tsetVisibleModal,\r\n\ttitleModal,\r\n\tcontentModal,\r\n\taccessDelete,\r\n}) => {\r\n\treturn (\r\n\t\t<>\r\n\t\t\t<div className='option-button'>\r\n\t\t\t\t<Button type={'primary'} onClick={onDelete} content={'Delete'} danger={true} />\r\n\t\t\t\t<Button type={'primary'} onClick={onEdit} content={'Edit'} danger={false} />\r\n\t\t\t</div>\r\n\t\t\t<div>\r\n\t\t\t\t<h1>{title}</h1>\r\n\t\t\t\t<ReactMarkdown source={content} />\r\n\t\t\t</div>\r\n\t\t\t<Modal\r\n\t\t\t\tvisibleModal={visibleModal}\r\n\t\t\t\tsetVisibleModal={setVisibleModal}\r\n\t\t\t\ttitle={titleModal}\r\n\t\t\t\tcontentModal={contentModal}\r\n\t\t\t\taccessDelete={accessDelete}\r\n\t\t\t/>\r\n\t\t</>\r\n\t)\r\n}\r\n","import React, { useState } from 'react'\r\nimport { useDispatch } from 'react-redux'\r\nimport { Actions } from '../models/actions'\r\nimport { message } from 'antd'\r\nimport { useHistory } from 'react-router-dom'\r\nimport { Viewer } from '../../../Ui/Organisms/Content/Viewer/index'\r\ntype PropsType = {\r\n\ttitle: string\r\n\tcontent: string\r\n\tsetEditMode: React.Dispatch<React.SetStateAction<boolean>>\r\n\tid: string\r\n}\r\n\r\nexport const View: React.FC<PropsType> = ({ title, content, setEditMode, id }) => {\r\n\t/* ===UseState=== */\r\n\tconst [visibleModal, setVisibleModal] = useState(false)\r\n\tconst [titleModal, setTitleModal] = useState('')\r\n\tconst [contentModal, setContentModal] = useState('')\r\n\r\n\t/* ===UseHistory=== */\r\n\tconst history = useHistory()\r\n\r\n\t/* ===UseDispatch=== */\r\n\tconst dispatch = useDispatch()\r\n\r\n\tconst onDeleteNote = () => {\r\n\t\tsetTitleModal('Delete the note')\r\n\t\tsetContentModal('You want to delete this note?')\r\n\t\tsetVisibleModal(true)\r\n\t}\r\n\r\n\tconst onEditNote = () => {\r\n\t\tsetEditMode(true)\r\n\t}\r\n\r\n\tconst accessDelete = () => {\r\n\t\tdispatch(Actions.deleteNote(id))\r\n\t\tsetVisibleModal(false)\r\n\t\tmessage.error('The note has been deleted')\r\n\t\thistory.goBack()\r\n\t}\r\n\r\n\treturn (\r\n\t\t<Viewer\r\n\t\t\ttitle={title}\r\n\t\t\tcontent={content}\r\n\t\t\tonDelete={onDeleteNote}\r\n\t\t\tonEdit={onEditNote}\r\n\t\t\tvisibleModal={visibleModal}\r\n\t\t\tsetVisibleModal={setVisibleModal}\r\n\t\t\ttitleModal={titleModal}\r\n\t\t\tcontentModal={contentModal}\r\n\t\t\taccessDelete={accessDelete}\r\n\t\t/>\r\n\t)\r\n}\r\n","import React, { ChangeEvent } from 'react'\r\nimport { Input } from '../../../Atoms/index'\r\nimport { Button } from '../../../Atoms/index'\r\nimport { Table } from '../../../Molecules/index'\r\nimport 'easymde/dist/easymde.min.css'\r\nimport './style.sass'\r\n\r\ntype PropsType = {\r\n\tisCreate: boolean\r\n\tinputContent: string\r\n\ttableContent: string\r\n\tclickSave: () => void\r\n\tclickCreate: (e: React.MouseEvent<HTMLElement, MouseEvent>) => void\r\n\tinputContentChange: (e: ChangeEvent<HTMLInputElement>) => void\r\n\ttableContentChange: (value: string) => void\r\n\tinputClassName: string\r\n\tinputPHolder: string\r\n}\r\nexport const Editor: React.FC<PropsType> = ({\r\n\tisCreate,\r\n\tinputContent,\r\n\tinputContentChange,\r\n\ttableContentChange,\r\n\ttableContent,\r\n\tclickCreate,\r\n\tclickSave,\r\n\tinputPHolder,\r\n\tinputClassName,\r\n}) => {\r\n\treturn (\r\n\t\t<>\r\n\t\t\t<Input\r\n\t\t\t\tplaceholder={inputPHolder}\r\n\t\t\t\tclassName={inputClassName}\r\n\t\t\t\tonChange={inputContentChange}\r\n\t\t\t\tvalue={inputContent}\r\n\t\t\t/>\r\n\t\t\t<Table onChange={tableContentChange} value={tableContent} />\r\n\t\t\t{isCreate ? (\r\n\t\t\t\t<Button type='dashed' onClick={clickCreate} content={'Create'} danger={false} />\r\n\t\t\t) : (\r\n\t\t\t\t<Button type='dashed' onClick={clickSave} content={'Save'} danger={false} />\r\n\t\t\t)}\r\n\t\t</>\r\n\t)\r\n}\r\n","import React, { useState } from 'react'\r\nimport { useDispatch } from 'react-redux'\r\nimport { Actions } from '../models/actions'\r\nimport { message } from 'antd'\r\nimport { useHistory } from 'react-router-dom'\r\nimport { Editor } from '../../../Ui/Organisms/Content/Editor/index'\r\nimport nextId from 'react-id-generator'\r\nimport 'easymde/dist/easymde.min.css'\r\n\r\ntype PropsType = {\r\n\tisCreate: boolean\r\n\ttitle: string\r\n\tcontent: string\r\n\tsetEditMode?: React.Dispatch<React.SetStateAction<boolean>>\r\n\tid?: string\r\n}\r\nexport const Edit: React.FC<PropsType> = ({\r\n\tisCreate,\r\n\ttitle,\r\n\tcontent,\r\n\tid,\r\n\tsetEditMode,\r\n}) => {\r\n\t/* ===UseState=== */\r\n\tlet [inputContent, setInputContent] = useState<string>(title)\r\n\tlet [simpleContent, setSimpleContent] = useState<string>(content)\r\n\r\n\t/* ===UseDispatch=== */\r\n\tconst dispatch = useDispatch()\r\n\r\n\t/* ===UseHistory=== */\r\n\tconst history = useHistory()\r\n\r\n\tconst onInputContent = (e: React.ChangeEvent<HTMLInputElement>) => {\r\n\t\tsetInputContent(e.currentTarget.value)\r\n\t}\r\n\r\n\tconst onSimpleContent = (value: string) => {\r\n\t\tsetSimpleContent(value)\r\n\t}\r\n\r\n\tconst createNewNote = (e: React.MouseEvent<HTMLElement, MouseEvent>) => {\r\n\t\tlet noteId = nextId()\r\n\t\tconsole.log(noteId)\r\n\t\tif (inputContent && simpleContent) {\r\n\t\t\tdispatch(Actions.addNote(inputContent, simpleContent, noteId))\r\n\t\t\thistory.push(noteId)\r\n\t\t\tsetInputContent('')\r\n\t\t\tsetSimpleContent('')\r\n\t\t\tmessage.success('The note has been created')\r\n\t\t}\r\n\t}\r\n\r\n\tconst saveNote = () => {\r\n\t\tsetEditMode!(false)\r\n\t\tdispatch(Actions.saveNote(inputContent, simpleContent, id!))\r\n\t}\r\n\r\n\treturn (\r\n\t\t<Editor\r\n\t\t\tisCreate={isCreate}\r\n\t\t\tinputContent={inputContent}\r\n\t\t\tinputContentChange={onInputContent}\r\n\t\t\ttableContentChange={onSimpleContent}\r\n\t\t\ttableContent={simpleContent}\r\n\t\t\tclickCreate={createNewNote}\r\n\t\t\tclickSave={saveNote}\r\n\t\t\tinputClassName={'title-editor'}\r\n\t\t\tinputPHolder={'Title your note'}\r\n\t\t/>\r\n\t)\r\n}\r\n","import React, { useState } from 'react'\r\nimport { View } from '../View'\r\nimport { Edit } from './../Edit/index'\r\nimport './style.sass'\r\n\r\ntype PropsType = {\r\n\ttitle: string\r\n\tcontent: string\r\n\tid: string\r\n}\r\n\r\nexport const Case: React.FC<PropsType> = ({ title, content, id }) => {\r\n\tconst [editMode, setEditMode] = useState(false)\r\n\treturn (\r\n\t\t<>\r\n\t\t\t{editMode ? (\r\n\t\t\t\t<Edit\r\n\t\t\t\t\tisCreate={false}\r\n\t\t\t\t\ttitle={title}\r\n\t\t\t\t\tcontent={content}\r\n\t\t\t\t\tid={id}\r\n\t\t\t\t\tsetEditMode={setEditMode}\r\n\t\t\t\t/>\r\n\t\t\t) : (\r\n\t\t\t\t<View title={title} content={content} setEditMode={setEditMode} id={id} />\r\n\t\t\t)}\r\n\t\t</>\r\n\t)\r\n}\r\n","import React from 'react'\r\nimport { useSelector } from 'react-redux'\r\nimport { AppStateType } from '../models/store'\r\nimport { Route } from 'react-router-dom'\r\nimport { Case } from '../Case/index'\r\n\r\nexport const List = () => {\r\n\tconst notes = useSelector((state: AppStateType) => state.notesReducer.notes)\r\n\tconst notesContentList = notes.map((note) => (\r\n\t\t<Route\r\n\t\t\tpath={`/${note.id}`}\r\n\t\t\texact\r\n\t\t\tkey={note.id}\r\n\t\t\trender={() => <Case title={note.title} content={note.content} id={note.id} />}\r\n\t\t/>\r\n\t))\r\n\r\n\treturn <>{notesContentList}</>\r\n}\r\n","import React from 'react'\r\nimport { Route, Switch } from 'react-router-dom'\r\nimport { List } from '../../../features/Note/List/index'\r\nimport { Edit } from '../../../features/Note/Edit/index'\r\nimport { Layout } from 'antd'\r\nconst { Content } = Layout\r\n\r\nexport const NoteContent = () => {\r\n\treturn (\r\n\t\t<Layout>\r\n\t\t\t<Layout className='site-layout' style={{ marginLeft: 200 }}>\r\n\t\t\t\t<Content\r\n\t\t\t\t\tstyle={{\r\n\t\t\t\t\t\tmargin: '24px 16px 0',\r\n\t\t\t\t\t\toverflow: 'initial',\r\n\t\t\t\t\t}}\r\n\t\t\t\t>\r\n\t\t\t\t\t<div\r\n\t\t\t\t\t\tclassName='site-layout-background'\r\n\t\t\t\t\t\tstyle={{ padding: 24, textAlign: 'center' }}\r\n\t\t\t\t\t>\r\n\t\t\t\t\t\t<Switch>\r\n\t\t\t\t\t\t\t<Route\r\n\t\t\t\t\t\t\t\tpath='/create'\r\n\t\t\t\t\t\t\t\trender={() => <Edit isCreate={true} title={''} content={''} />}\r\n\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t<List />\r\n\t\t\t\t\t\t</Switch>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</Content>\r\n\t\t\t</Layout>\r\n\t\t</Layout>\r\n\t)\r\n}\r\n","import React, { useEffect } from 'react'\r\nimport { SideBar } from './../Ui/Templates/SideBar/index'\r\nimport { NoteContent } from '../Ui/Templates/ContentNote/index'\r\nimport { useSelector, useDispatch } from 'react-redux'\r\nimport { AppStateType } from '../features/Note/models/store'\r\nimport { Actions } from '../features/Note/models/actions'\r\n\r\nexport const Notes = () => {\r\n\tconst notes = useSelector((state: AppStateType) => state.notesReducer.notes)\r\n\tconst dispatch = useDispatch()\r\n\r\n\tuseEffect(() => {\r\n\t\tconst items = localStorage.getItem('notes')\r\n\t\tif (items) dispatch(Actions.getNote(JSON.parse(items)))\r\n\t}, [dispatch])\r\n\r\n\tuseEffect(() => {\r\n\t\tlocalStorage.setItem('notes', JSON.stringify(notes))\r\n\t}, [notes])\r\n\r\n\treturn (\r\n\t\t<div className=''>\r\n\t\t\t<SideBar />\r\n\t\t\t<NoteContent />\r\n\t\t</div>\r\n\t)\r\n}\r\n","import React from 'react'\nimport './App.sass'\nimport { Notes } from './component/pages/Notes'\n\nfunction App() {\n\treturn (\n\t\t<div className='wrapper'>\n\t\t\t<Notes />\n\t\t</div>\n\t)\n}\n\nexport default App\n","let db\r\nlet dbReq = indexedDB.open('myDB', 1)\r\n\r\ndbReq.onupgradeneeded = (event) => {\r\n\t// Зададим переменной db ссылку на базу данных\r\n\tdb = event.target.result\r\n\t// Создадим хранилище объектов с именем notes.\r\n\tlet notes = db.createObjectStore('notes', { autoIncrement: true })\r\n}\r\ndbReq.onsuccess = (event) => {\r\n\tdb = event.target.result\r\n\r\n\tgetAndDisplayNotes(db)\r\n}\r\n\r\ndbReq.onerror = (event) => {\r\n\talert('error opening database ' + event.target.errorCode)\r\n}\r\n\r\nexport const getAndDisplayNotes = (db) => {\r\n\tlet tx = db.transaction(['notes'], 'readonly')\r\n\tlet store = tx.objectStore('notes')\r\n\r\n\t// Создать запрос курсора\r\n\tlet req = store.openCursor()\r\n\tlet allNotes = []\r\n\r\n\treq.onsuccess = (event) => {\r\n\t\t// Результатом req.onsuccess в запросах openCursor является\r\n\t\t// IDBCursor\r\n\t\tlet cursor = event.target.result\r\n\r\n\t\tif (cursor != null) {\r\n\t\t\tallNotes.push(cursor.value)\r\n\t\t\tcursor.continue()\r\n\t\t} else {\r\n\t\t\t// Если у нас нулевой курсор, это означает, что мы получили\r\n\t\t\t// все данные, поэтому отображаем заметки, которые мы получили.\r\n\t\t\t// console.log(allNotes)\r\n\t\t}\r\n\t}\r\n\r\n\treq.onerror = (event) => {\r\n\t\talert('error in cursor request ' + event.target.errorCode)\r\n\t}\r\n}\r\n\r\nconst addStickyNote = (db, title, content, id) => {\r\n\t// Запустим транзакцию базы данных и получите хранилище объектов Notes\r\n\tlet tx = db.transaction(['notes'], 'readwrite')\r\n\tlet store = tx.objectStore('notes')\r\n\t// Добаляем заметку в хранилище объектов\r\n\tlet note = { title, content, id, timestamp: Date.now() }\r\n\tstore.add(note)\r\n\t// Ожидаем завершения транзакции базы данных\r\n\ttx.oncomplete = () => {\r\n\t\tconsole.log('stored note!')\r\n\t}\r\n\ttx.onerror = (event) => {\r\n\t\talert('error storing note ' + event.target.errorCode)\r\n\t}\r\n}\r\n\r\nexport const submitNote = (id, title, content) => {\r\n\taddStickyNote(db, id, title, content)\r\n\tgetAndDisplayNotes(db)\r\n}\r\n","import {\r\n\tADD_NOTE,\r\n\tDELETE_NOTE,\r\n\tActionsType,\r\n\tPayloadType,\r\n\tSAVE_NOTE,\r\n\tGET_NOTES,\r\n} from './actions'\r\n\r\nlet initialState = {\r\n\tnotes: [] as Array<PayloadType>,\r\n}\r\n\r\ntype InitialStateType = typeof initialState\r\n\r\nexport const Reducer = (state = initialState, action: ActionsType): InitialStateType => {\r\n\tswitch (action.type) {\r\n\t\tcase GET_NOTES:\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\tnotes: action.payload,\r\n\t\t\t}\r\n\t\tcase ADD_NOTE:\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\tnotes: [...state.notes, action.payload],\r\n\t\t\t}\r\n\t\tcase SAVE_NOTE:\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\tnotes: [\r\n\t\t\t\t\t...state.notes.map((item) => {\r\n\t\t\t\t\t\treturn item.id === action.payload.id ? action.payload : item\r\n\t\t\t\t\t}),\r\n\t\t\t\t],\r\n\t\t\t}\r\n\t\tcase DELETE_NOTE:\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\tnotes: [...state.notes.filter((note) => note.id !== action.payload.id)],\r\n\t\t\t}\r\n\t\tdefault:\r\n\t\t\treturn state\r\n\t}\r\n}\r\n","import { combineReducers, createStore, applyMiddleware } from 'redux'\r\nimport thunk from 'redux-thunk'\r\nimport { Reducer } from './reducer'\r\n\r\nconst rootReducer = combineReducers({\r\n\tnotesReducer: Reducer,\r\n})\r\n\r\ntype RootReducerType = typeof rootReducer\r\nexport type AppStateType = ReturnType<RootReducerType>\r\n\r\ntype PropertiesType<T> = T extends {\r\n\t[key: string]: infer U\r\n}\r\n\t? U\r\n\t: never\r\n\r\nexport type InferAtionsType<\r\n\tT extends { [key: string]: (...args: any[]) => any }\r\n> = ReturnType<PropertiesType<T>>\r\n\r\nexport const store = createStore(rootReducer, applyMiddleware(thunk))\r\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport './global.sass'\nimport { Provider } from 'react-redux'\nimport { HashRouter } from 'react-router-dom'\nimport App from './App'\nimport { store } from './component/features/Note/models/store'\nimport './backend/index'\n\nReactDOM.render(\n\t<HashRouter>\n\t\t<Provider store={store}>\n\t\t\t<App />\n\t\t</Provider>\n\t</HashRouter>,\n\tdocument.getElementById('root')\n)\n"],"sourceRoot":""}