{"version":3,"sources":["component/Ui/Atoms/Button.tsx","component/Ui/Atoms/Input/index.tsx","component/features/SideBar/index.tsx","component/features/Note/models/actions.ts","component/Ui/Molecules/Modal.tsx","component/Ui/Molecules/MarkDownEditor/index.tsx","component/Ui/Organisms/Content/Viewer/index.tsx","component/features/Note/Organisms/View/index.tsx","component/Ui/Organisms/Content/Editor/index.tsx","component/features/Note/Organisms/Edit/index.tsx","component/features/Note/Organisms/Case/index.tsx","component/features/Note/Moleculs/List/index.tsx","component/features/Note/Templates/Content/index.tsx","component/pages/Notes.tsx","App.tsx","backend/index.js","component/features/Note/models/reducer.ts","component/features/Note/models/store.ts","index.tsx"],"names":["Button","type","onClick","content","props","Input","placeholder","className","onChange","value","required","Sider","Layout","Header","SideBar","notes","useSelector","state","notesReducer","useState","inputContent","setInputContent","collapsed","notesList","map","note","Item","key","id","to","activeClassName","title","onChangeInputContent","e","currentTarget","toUpperCase","i","indexOf","before","substring","search","length","after","searchItems","style","color","trigger","collapsible","overflow","height","position","left","theme","mode","defaultSelectedKeys","nextId","zIndex","width","Actions","payload","Modal","visibleModal","setVisibleModal","contentModal","accessDelete","visible","onOk","onCancel","Table","options","autofocus","spellChecker","uploadImage","autoDownloadFontAwesome","blockStyles","bold","italic","toolbar","name","action","toggleBold","toggleItalic","toggleHeadingSmaller","toggleHeading1","toggleBlockquote","drawTable","drawHorizontalRule","toggleOrderedList","togglePreview","drawLink","drawImage","Viewer","onDelete","onEdit","titleModal","danger","source","View","setEditMode","setTitleModal","setContentModal","history","useHistory","dispatch","useDispatch","message","error","goBack","Editor","isCreate","inputContentChange","tableContentChange","tableContent","clickCreate","clickSave","inputPHolder","inputClassName","Edit","simpleContent","setSimpleContent","noteId","Date","now","toString","push","success","Case","editMode","List","notesContentList","path","exact","render","Content","NoteContent","marginLeft","margin","padding","textAlign","Notes","useEffect","items","localStorage","getItem","JSON","parse","setItem","stringify","App","db","initialState","rootReducer","combineReducers","item","filter","store","createStore","applyMiddleware","thunk","dbReq","indexedDB","open","onupgradeneeded","event","target","result","createObjectStore","autoIncrement","onsuccess","getAndDisplayNotes","onerror","alert","errorCode","req","transaction","objectStore","openCursor","allNotes","cursor","continue","ReactDOM","document","getElementById"],"mappings":"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","file":"static/js/main.b0e50675.chunk.js","sourcesContent":["import React from 'react'\r\nimport { Button as ButtonA } from 'antd'\r\n\r\ntype PropsType = {\r\n\ttype: 'link' | 'ghost' | 'default' | 'primary' | 'dashed' | undefined\r\n\tonClick: (e: React.MouseEvent<HTMLElement, MouseEvent>) => void\r\n\tcontent: string\r\n\tdanger: boolean\r\n}\r\n\r\nexport const Button: React.FC<PropsType> = ({ type, onClick, content, ...props }) => {\r\n\treturn (\r\n\t\t<ButtonA type={type} onClick={onClick} {...props}>\r\n\t\t\t{content}\r\n\t\t</ButtonA>\r\n\t)\r\n}\r\n","import React from 'react'\r\nimport { Input as InputA } from 'antd'\r\nimport './style.sass'\r\ntype PropsType = {\r\n\tplaceholder: string\r\n\tclassName: string\r\n\tonChange: (e: React.ChangeEvent<HTMLInputElement>) => void\r\n\tvalue: string\r\n}\r\n\r\nexport const Input: React.FC<PropsType> = ({\r\n\tplaceholder,\r\n\tclassName,\r\n\tonChange,\r\n\tvalue,\r\n}) => {\r\n\treturn (\r\n\t\t<InputA\r\n\t\t\tplaceholder={placeholder}\r\n\t\t\tclassName={`input ${className}`}\r\n\t\t\tonChange={onChange}\r\n\t\t\tvalue={value}\r\n\t\t\trequired\r\n\t\t/>\r\n\t)\r\n}\r\n","import React, { useState } from 'react'\r\nimport { Layout, Menu } from 'antd'\r\nimport { NavLink } from 'react-router-dom'\r\nimport { useSelector } from 'react-redux'\r\nimport { AppStateType } from '../Note/models/store'\r\nimport { Input } from '../../Ui/Atoms/index'\r\nimport { MenuUnfoldOutlined, MenuFoldOutlined, FileOutlined } from '@ant-design/icons'\r\nimport nextId from 'react-id-generator'\r\nimport 'antd/dist/antd.css'\r\nimport './style.sass'\r\n\r\nconst { Sider, Header } = Layout\r\n\r\nexport const SideBar = () => {\r\n\tconst notes = useSelector((state: AppStateType) => state.notesReducer.notes)\r\n\r\n\tconst [inputContent, setInputContent] = useState('')\r\n\tconst [collapsed, setCollapsed] = useState(false)\r\n\r\n\tconst notesList = notes.map((note) => {\r\n\t\treturn (\r\n\t\t\t<Menu.Item key={note.id}>\r\n\t\t\t\t<NavLink to={note.id} className={'note-item'} activeClassName='active'>\r\n\t\t\t\t\t{note.title}\r\n\t\t\t\t</NavLink>\r\n\t\t\t</Menu.Item>\r\n\t\t)\r\n\t})\r\n\r\n\tconst onChangeInputContent = (e: React.ChangeEvent<HTMLInputElement>) => {\r\n\t\tsetInputContent(e.currentTarget.value)\r\n\t\tlet value = e.currentTarget.value.toUpperCase()\r\n\t\tfor (let note of notes) {\r\n\t\t\tlet i = note.title.toUpperCase().indexOf(value)\r\n\t\t\tif (i >= 0) {\r\n\t\t\t\tnote.before = note.title.substring(0, i)\r\n\t\t\t\tnote.search = note.title.substring(i, i + value.length)\r\n\t\t\t\tnote.after = note.title.substring(i + value.length)\r\n\t\t\t} else note.search = ''\r\n\t\t}\r\n\t}\r\n\r\n\tlet searchItems = notes.map((note) => {\r\n\t\treturn (\r\n\t\t\tnote.search !== '' && (\r\n\t\t\t\t<Menu.Item key={note.id}>\r\n\t\t\t\t\t<NavLink to={note.id} className={'note-item'} activeClassName='active'>\r\n\t\t\t\t\t\t<span>\r\n\t\t\t\t\t\t\t{note.before}\r\n\t\t\t\t\t\t\t<span style={{ color: 'white' }}>{note.search}</span>\r\n\t\t\t\t\t\t\t{note.after}\r\n\t\t\t\t\t\t</span>\r\n\t\t\t\t\t</NavLink>\r\n\t\t\t\t</Menu.Item>\r\n\t\t\t)\r\n\t\t)\r\n\t})\r\n\r\n\tconst onCollapse = () => {\r\n\t\tsetCollapsed(!collapsed)\r\n\t}\r\n\r\n\treturn (\r\n\t\t<>\r\n\t\t\t{/* Here must be MenuComponent with SideBar/Menu/Desktop or Mobile. But it create few problmes*/}\r\n\r\n\t\t\t<div className='desktop-menu'>\r\n\t\t\t\t<Layout>\r\n\t\t\t\t\t<Sider\r\n\t\t\t\t\t\ttrigger={null}\r\n\t\t\t\t\t\tcollapsible\r\n\t\t\t\t\t\tcollapsed={collapsed}\r\n\t\t\t\t\t\tstyle={{\r\n\t\t\t\t\t\t\toverflow: 'auto',\r\n\t\t\t\t\t\t\theight: '100%',\r\n\t\t\t\t\t\t\tposition: 'fixed',\r\n\t\t\t\t\t\t\tleft: 0,\r\n\t\t\t\t\t\t}}\r\n\t\t\t\t\t>\r\n\t\t\t\t\t\t<Menu theme='dark' mode='inline' defaultSelectedKeys={['1']}>\r\n\t\t\t\t\t\t\t<Input\r\n\t\t\t\t\t\t\t\tvalue={inputContent}\r\n\t\t\t\t\t\t\t\tonChange={onChangeInputContent}\r\n\t\t\t\t\t\t\t\tplaceholder={'input your note'}\r\n\t\t\t\t\t\t\t\tclassName={'input-search'}\r\n\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t<Menu.Item key={nextId()}>\r\n\t\t\t\t\t\t\t\t<NavLink to={'/create'} className='create-note_item'>\r\n\t\t\t\t\t\t\t\t\tCreate New Note\r\n\t\t\t\t\t\t\t\t</NavLink>\r\n\t\t\t\t\t\t\t</Menu.Item>\r\n\t\t\t\t\t\t\t{!inputContent ? notesList : searchItems}\r\n\t\t\t\t\t\t</Menu>\r\n\t\t\t\t\t</Sider>\r\n\t\t\t\t</Layout>\r\n\t\t\t</div>\r\n\r\n\t\t\t<div className='mobile-menu'>\r\n\t\t\t\t<Layout>\r\n\t\t\t\t\t<Header style={{ position: 'fixed', zIndex: 1, width: '100%' }}>\r\n\t\t\t\t\t\t<Input\r\n\t\t\t\t\t\t\tvalue={inputContent}\r\n\t\t\t\t\t\t\tonChange={onChangeInputContent}\r\n\t\t\t\t\t\t\tplaceholder={'input your note'}\r\n\t\t\t\t\t\t\tclassName={'input-search'}\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t<Menu theme='dark' mode='horizontal' defaultSelectedKeys={['2']}>\r\n\t\t\t\t\t\t\t<Menu.Item key={nextId()}>\r\n\t\t\t\t\t\t\t\t<NavLink to={'/create'} className='create-note_item'>\r\n\t\t\t\t\t\t\t\t\tCreate New Note\r\n\t\t\t\t\t\t\t\t</NavLink>\r\n\t\t\t\t\t\t\t</Menu.Item>\r\n\t\t\t\t\t\t\t{!inputContent ? notesList : searchItems}\r\n\t\t\t\t\t\t</Menu>\r\n\t\t\t\t\t</Header>\r\n\t\t\t\t</Layout>\r\n\t\t\t</div>\r\n\t\t</>\r\n\t)\r\n}\r\n","import { InferAtionsType } from \"./store\";\r\n\r\nexport const ADD_NOTE = \"ADD_NOTE\";\r\nexport const SAVE_NOTE = \"SAVE_NOTE\";\r\nexport const DELETE_NOTE = \"DELTE_NOTE\";\r\nexport const GET_NOTES = \"GET_NOTES\";\r\nexport type ActionsType = InferAtionsType<typeof Actions>;\r\n\r\nexport type PayloadType = {\r\n  title: string;\r\n  content: string;\r\n  id: string;\r\n  search: string;\r\n  before: string;\r\n  after: string;\r\n};\r\n\r\nexport const Actions = {\r\n  addNote: (title: string, content: string, id: string) =>\r\n    ({\r\n      type: ADD_NOTE,\r\n      payload: { title, content, id, search: \"\", before: \"\", after: \"\" },\r\n    } as const),\r\n  saveNote: (title: string, content: string, id: string) =>\r\n    ({\r\n      type: SAVE_NOTE,\r\n      payload: { title, content, id, search: \"\", before: \"\", after: \"\" },\r\n    } as const),\r\n  deleteNote: (id: string) =>\r\n    ({\r\n      type: DELETE_NOTE,\r\n      payload: { id },\r\n    } as const),\r\n  getNote: (notes: Array<PayloadType>) =>\r\n    ({\r\n      type: GET_NOTES,\r\n      payload: notes,\r\n    } as const),\r\n};\r\n","import React from 'react'\r\nimport { Modal as ModalA } from 'antd'\r\nimport 'antd/dist/antd.css'\r\n\r\ntype PropsType = {\r\n\tvisibleModal: boolean\r\n\tsetVisibleModal: React.Dispatch<React.SetStateAction<boolean>>\r\n\ttitle: string\r\n\tcontentModal: string\r\n\taccessDelete: () => void\r\n}\r\n\r\nexport const Modal: React.FC<PropsType> = ({\r\n\tvisibleModal,\r\n\tsetVisibleModal,\r\n\ttitle,\r\n\tcontentModal,\r\n\taccessDelete,\r\n}) => {\r\n\treturn (\r\n\t\t<ModalA\r\n\t\t\ttitle={title}\r\n\t\t\tvisible={visibleModal}\r\n\t\t\tonOk={accessDelete}\r\n\t\t\tonCancel={() => setVisibleModal(false)}\r\n\t\t>\r\n\t\t\t<p>{contentModal}</p>\r\n\t\t</ModalA>\r\n\t)\r\n}\r\n","import React from 'react'\r\nimport SimpleMDE from 'react-simplemde-editor'\r\nimport './style.sass'\r\nimport {\r\n\ttoggleBlockquote,\r\n\ttoggleBold,\r\n\ttoggleItalic,\r\n\ttoggleHeading1,\r\n\tdrawImage,\r\n\tdrawTable,\r\n\tdrawHorizontalRule,\r\n\ttoggleOrderedList,\r\n\ttogglePreview,\r\n\tdrawLink,\r\n\ttoggleHeadingSmaller,\r\n} from 'easymde'\r\n\r\ntype PropsType = {\r\n\tonChange: (value: string) => void\r\n\tvalue: string\r\n}\r\n\r\nexport const Table: React.FC<PropsType> = ({ onChange, value }) => {\r\n\treturn (\r\n\t\t<SimpleMDE\r\n\t\t\tonChange={onChange}\r\n\t\t\tvalue={value}\r\n\t\t\toptions={{\r\n\t\t\t\tautofocus: true,\r\n\t\t\t\tspellChecker: false,\r\n\t\t\t\tuploadImage: true,\r\n\t\t\t\tautoDownloadFontAwesome: true,\r\n\t\t\t\tblockStyles: {\r\n\t\t\t\t\tbold: '__',\r\n\t\t\t\t\titalic: '_',\r\n\t\t\t\t},\r\n\t\t\t\ttoolbar: [\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tname: 'bold',\r\n\t\t\t\t\t\taction: toggleBold,\r\n\t\t\t\t\t\tclassName: 'fa fa-bold',\r\n\t\t\t\t\t\ttitle: 'Bold text',\r\n\t\t\t\t\t},\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tname: 'italic',\r\n\t\t\t\t\t\taction: toggleItalic,\r\n\t\t\t\t\t\tclassName: 'fa fa-italic',\r\n\t\t\t\t\t\ttitle: 'Italic text',\r\n\t\t\t\t\t},\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tname: 'heading',\r\n\t\t\t\t\t\taction: toggleHeadingSmaller,\r\n\t\t\t\t\t\tclassName: 'fa fa-header',\r\n\t\t\t\t\t\ttitle: 'Heading',\r\n\t\t\t\t\t},\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tname: 'heading-1',\r\n\t\t\t\t\t\taction: toggleHeading1,\r\n\t\t\t\t\t\tclassName: 'fa fa-header fa-header-x fa-header-1',\r\n\t\t\t\t\t\ttitle: 'Big Heading',\r\n\t\t\t\t\t},\r\n\t\t\t\t\t'|',\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tname: 'quote',\r\n\t\t\t\t\t\taction: toggleBlockquote,\r\n\t\t\t\t\t\tclassName: 'fa fa-quote-left',\r\n\t\t\t\t\t\ttitle: 'Custom text',\r\n\t\t\t\t\t},\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tname: 'table',\r\n\t\t\t\t\t\taction: drawTable,\r\n\t\t\t\t\t\tclassName: 'fa fa-table',\r\n\t\t\t\t\t\ttitle: 'Insert Table',\r\n\t\t\t\t\t},\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tname: 'horizontal-rule',\r\n\t\t\t\t\t\taction: drawHorizontalRule,\r\n\t\t\t\t\t\tclassName: 'fa fa-minus',\r\n\t\t\t\t\t\ttitle: 'Insert Horizontal Line',\r\n\t\t\t\t\t},\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tname: 'ordered-list',\r\n\t\t\t\t\t\taction: toggleOrderedList,\r\n\t\t\t\t\t\tclassName: 'fa fa-list-ol',\r\n\t\t\t\t\t\ttitle: 'Numbered List',\r\n\t\t\t\t\t},\r\n\t\t\t\t\t'|',\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tname: 'preview',\r\n\t\t\t\t\t\taction: togglePreview,\r\n\t\t\t\t\t\tclassName: 'fa fa-eye no-disable',\r\n\t\t\t\t\t\ttitle: 'Toggle Preview',\r\n\t\t\t\t\t},\r\n\t\t\t\t\t'|',\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tname: 'link',\r\n\t\t\t\t\t\taction: drawLink,\r\n\t\t\t\t\t\tclassName: 'fa fa-link',\r\n\t\t\t\t\t\ttitle: 'Create Link',\r\n\t\t\t\t\t},\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tname: 'image',\r\n\t\t\t\t\t\taction: drawImage,\r\n\t\t\t\t\t\tclassName: 'fa fa-picture-o',\r\n\t\t\t\t\t\ttitle: 'Insert Image',\r\n\t\t\t\t\t},\r\n\t\t\t\t],\r\n\t\t\t}}\r\n\t\t/>\r\n\t)\r\n}\r\n","import React from 'react'\r\nimport { Modal } from '../../../Molecules/index'\r\nimport { Button } from '../../../Atoms/index'\r\nimport ReactMarkdown from 'react-markdown'\r\nimport './style.sass'\r\n\r\ntype PropsType = {\r\n\ttitle: string\r\n\tcontent: string\r\n\tonDelete: () => void\r\n\tonEdit: () => void\r\n\tvisibleModal: boolean\r\n\ttitleModal: string\r\n\tcontentModal: string\r\n\taccessDelete: () => void\r\n\tsetVisibleModal: React.Dispatch<React.SetStateAction<boolean>>\r\n}\r\n\r\nexport const Viewer: React.FC<PropsType> = ({\r\n\ttitle,\r\n\tcontent,\r\n\tonDelete,\r\n\tonEdit,\r\n\tvisibleModal,\r\n\tsetVisibleModal,\r\n\ttitleModal,\r\n\tcontentModal,\r\n\taccessDelete,\r\n}) => {\r\n\treturn (\r\n\t\t<>\r\n\t\t\t<div className='option-button'>\r\n\t\t\t\t<Button type={'primary'} onClick={onDelete} content={'Delete'} danger={true} />\r\n\t\t\t\t<Button type={'primary'} onClick={onEdit} content={'Edit'} danger={false} />\r\n\t\t\t</div>\r\n\t\t\t<div>\r\n\t\t\t\t<h1>{title}</h1>\r\n\t\t\t\t<ReactMarkdown source={content} />\r\n\t\t\t</div>\r\n\t\t\t<Modal\r\n\t\t\t\tvisibleModal={visibleModal}\r\n\t\t\t\tsetVisibleModal={setVisibleModal}\r\n\t\t\t\ttitle={titleModal}\r\n\t\t\t\tcontentModal={contentModal}\r\n\t\t\t\taccessDelete={accessDelete}\r\n\t\t\t/>\r\n\t\t</>\r\n\t)\r\n}\r\n","import React, { useState } from 'react'\r\nimport { useDispatch } from 'react-redux'\r\nimport { Actions } from '../../models/actions'\r\nimport { message } from 'antd'\r\nimport { useHistory } from 'react-router-dom'\r\nimport { Viewer } from '../../../../Ui/Organisms/Content/Viewer/index'\r\ntype PropsType = {\r\n\ttitle: string\r\n\tcontent: string\r\n\tsetEditMode: React.Dispatch<React.SetStateAction<boolean>>\r\n\tid: string\r\n}\r\n\r\nexport const View: React.FC<PropsType> = ({ title, content, setEditMode, id }) => {\r\n\t/* ===UseState=== */\r\n\tconst [visibleModal, setVisibleModal] = useState(false)\r\n\tconst [titleModal, setTitleModal] = useState('')\r\n\tconst [contentModal, setContentModal] = useState('')\r\n\r\n\t/* ===UseHistory=== */\r\n\tconst history = useHistory()\r\n\r\n\t/* ===UseDispatch=== */\r\n\tconst dispatch = useDispatch()\r\n\r\n\tconst onDeleteNote = () => {\r\n\t\tsetTitleModal('Delete the note')\r\n\t\tsetContentModal('You want to delete this note?')\r\n\t\tsetVisibleModal(true)\r\n\t}\r\n\r\n\tconst onEditNote = () => {\r\n\t\tsetEditMode(true)\r\n\t}\r\n\r\n\tconst accessDelete = () => {\r\n\t\tdispatch(Actions.deleteNote(id))\r\n\t\tsetVisibleModal(false)\r\n\t\tmessage.error('The note has been deleted')\r\n\t\thistory.goBack()\r\n\t}\r\n\r\n\treturn (\r\n\t\t<Viewer\r\n\t\t\ttitle={title}\r\n\t\t\tcontent={content}\r\n\t\t\tonDelete={onDeleteNote}\r\n\t\t\tonEdit={onEditNote}\r\n\t\t\tvisibleModal={visibleModal}\r\n\t\t\tsetVisibleModal={setVisibleModal}\r\n\t\t\ttitleModal={titleModal}\r\n\t\t\tcontentModal={contentModal}\r\n\t\t\taccessDelete={accessDelete}\r\n\t\t/>\r\n\t)\r\n}\r\n","import React, { ChangeEvent } from 'react'\r\nimport { Input } from '../../../Atoms/index'\r\nimport { Button } from '../../../Atoms/index'\r\nimport { Table } from '../../../Molecules/index'\r\nimport 'easymde/dist/easymde.min.css'\r\nimport './style.sass'\r\n\r\ntype PropsType = {\r\n\tisCreate: boolean\r\n\tinputContent: string\r\n\ttableContent: string\r\n\tclickSave: () => void\r\n\tclickCreate: (e: React.MouseEvent<HTMLElement, MouseEvent>) => void\r\n\tinputContentChange: (e: ChangeEvent<HTMLInputElement>) => void\r\n\ttableContentChange: (value: string) => void\r\n\tinputClassName: string\r\n\tinputPHolder: string\r\n}\r\nexport const Editor: React.FC<PropsType> = ({\r\n\tisCreate,\r\n\tinputContent,\r\n\tinputContentChange,\r\n\ttableContentChange,\r\n\ttableContent,\r\n\tclickCreate,\r\n\tclickSave,\r\n\tinputPHolder,\r\n\tinputClassName,\r\n}) => {\r\n\treturn (\r\n\t\t<>\r\n\t\t\t<Input\r\n\t\t\t\tplaceholder={inputPHolder}\r\n\t\t\t\tclassName={inputClassName}\r\n\t\t\t\tonChange={inputContentChange}\r\n\t\t\t\tvalue={inputContent}\r\n\t\t\t/>\r\n\t\t\t<Table onChange={tableContentChange} value={tableContent} />\r\n\t\t\t{isCreate ? (\r\n\t\t\t\t<Button type='dashed' onClick={clickCreate} content={'Create'} danger={false} />\r\n\t\t\t) : (\r\n\t\t\t\t<Button type='dashed' onClick={clickSave} content={'Save'} danger={false} />\r\n\t\t\t)}\r\n\t\t</>\r\n\t)\r\n}\r\n","import React, { useState } from 'react'\r\nimport { useDispatch } from 'react-redux'\r\nimport { Actions } from '../../models/actions'\r\nimport { message } from 'antd'\r\nimport { useHistory } from 'react-router-dom'\r\nimport { Editor } from '../../../../Ui/Organisms/Content/Editor/index'\r\nimport 'easymde/dist/easymde.min.css'\r\n\r\ntype PropsType = {\r\n\tisCreate: boolean\r\n\ttitle: string\r\n\tcontent: string\r\n\tsetEditMode?: React.Dispatch<React.SetStateAction<boolean>>\r\n\tid?: string\r\n}\r\nexport const Edit: React.FC<PropsType> = ({\r\n\tisCreate,\r\n\ttitle,\r\n\tcontent,\r\n\tid,\r\n\tsetEditMode,\r\n}) => {\r\n\t/* ===UseState=== */\r\n\tlet [inputContent, setInputContent] = useState<string>(title)\r\n\tlet [simpleContent, setSimpleContent] = useState<string>(content)\r\n\r\n\t/* ===UseDispatch=== */\r\n\tconst dispatch = useDispatch()\r\n\r\n\t/* ===UseHistory=== */\r\n\tconst history = useHistory()\r\n\r\n\tconst onInputContent = (e: React.ChangeEvent<HTMLInputElement>) => {\r\n\t\tsetInputContent(e.currentTarget.value)\r\n\t}\r\n\r\n\tconst onSimpleContent = (value: string) => {\r\n\t\tsetSimpleContent(value)\r\n\t}\r\n\r\n\tconst createNewNote = (e: React.MouseEvent<HTMLElement, MouseEvent>) => {\r\n\t\tlet noteId = Date.now().toString()\r\n\t\tif (inputContent && simpleContent) {\r\n\t\t\tdispatch(Actions.addNote(inputContent, simpleContent, noteId))\r\n\t\t\thistory.push(noteId)\r\n\t\t\tsetInputContent('')\r\n\t\t\tsetSimpleContent('')\r\n\t\t\tmessage.success('The note has been created')\r\n\t\t}\r\n\t}\r\n\r\n\tconst saveNote = () => {\r\n\t\tsetEditMode!(false)\r\n\t\tdispatch(Actions.saveNote(inputContent, simpleContent, id!))\r\n\t}\r\n\r\n\treturn (\r\n\t\t<Editor\r\n\t\t\tisCreate={isCreate}\r\n\t\t\tinputContent={inputContent}\r\n\t\t\tinputContentChange={onInputContent}\r\n\t\t\ttableContentChange={onSimpleContent}\r\n\t\t\ttableContent={simpleContent}\r\n\t\t\tclickCreate={createNewNote}\r\n\t\t\tclickSave={saveNote}\r\n\t\t\tinputClassName={'title-editor'}\r\n\t\t\tinputPHolder={'Title your note'}\r\n\t\t/>\r\n\t)\r\n}\r\n","import React, { useState } from 'react'\r\nimport { View } from '../View'\r\nimport { Edit } from '../Edit/index'\r\nimport './style.sass'\r\n\r\ntype PropsType = {\r\n\ttitle: string\r\n\tcontent: string\r\n\tid: string\r\n}\r\n\r\nexport const Case: React.FC<PropsType> = ({ title, content, id }) => {\r\n\tconst [editMode, setEditMode] = useState(false)\r\n\treturn (\r\n\t\t<>\r\n\t\t\t{editMode ? (\r\n\t\t\t\t<Edit\r\n\t\t\t\t\tisCreate={false}\r\n\t\t\t\t\ttitle={title}\r\n\t\t\t\t\tcontent={content}\r\n\t\t\t\t\tid={id}\r\n\t\t\t\t\tsetEditMode={setEditMode}\r\n\t\t\t\t/>\r\n\t\t\t) : (\r\n\t\t\t\t<View title={title} content={content} setEditMode={setEditMode} id={id} />\r\n\t\t\t)}\r\n\t\t</>\r\n\t)\r\n}\r\n","import React from 'react'\r\nimport { useSelector } from 'react-redux'\r\nimport { AppStateType } from '../../models/store'\r\nimport { Route } from 'react-router-dom'\r\nimport { Case } from '../../Organisms/Case/index'\r\n\r\nexport const List = () => {\r\n\tconst notes = useSelector((state: AppStateType) => state.notesReducer.notes)\r\n\tconst notesContentList = notes.map((note) => (\r\n\t\t<Route\r\n\t\t\tpath={`/${note.id}`}\r\n\t\t\texact\r\n\t\t\tkey={note.id}\r\n\t\t\trender={() => <Case title={note.title} content={note.content} id={note.id} />}\r\n\t\t/>\r\n\t))\r\n\r\n\treturn <>{notesContentList}</>\r\n}\r\n","import React from 'react'\r\nimport { Route, Switch } from 'react-router-dom'\r\nimport { List } from '../../Moleculs/List/index'\r\nimport { Edit } from '../../Organisms/Edit/index'\r\nimport { Layout } from 'antd'\r\nconst { Content } = Layout\r\n\r\nexport const NoteContent = () => {\r\n\treturn (\r\n\t\t<Layout>\r\n\t\t\t<Layout className='site-layout' style={{ marginLeft: 200 }}>\r\n\t\t\t\t<Content\r\n\t\t\t\t\tstyle={{\r\n\t\t\t\t\t\tmargin: '24px 16px 0',\r\n\t\t\t\t\t\toverflow: 'initial',\r\n\t\t\t\t\t}}\r\n\t\t\t\t>\r\n\t\t\t\t\t<div\r\n\t\t\t\t\t\tclassName='site-layout-background'\r\n\t\t\t\t\t\tstyle={{ padding: 24, textAlign: 'center' }}\r\n\t\t\t\t\t>\r\n\t\t\t\t\t\t<Switch>\r\n\t\t\t\t\t\t\t<Route\r\n\t\t\t\t\t\t\t\tpath='/create'\r\n\t\t\t\t\t\t\t\trender={() => <Edit isCreate={true} title={''} content={''} />}\r\n\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t<List />\r\n\t\t\t\t\t\t</Switch>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</Content>\r\n\t\t\t</Layout>\r\n\t\t</Layout>\r\n\t)\r\n}\r\n","import React, { useEffect } from 'react'\r\nimport { SideBar } from '../features/SideBar/index'\r\nimport { NoteContent } from '../features/Note/Templates/Content/index'\r\nimport { useSelector, useDispatch } from 'react-redux'\r\nimport { AppStateType } from '../features/Note/models/store'\r\nimport { Actions } from '../features/Note/models/actions'\r\nimport './style.sass'\r\n\r\nexport const Notes = () => {\r\n\tconst notes = useSelector((state: AppStateType) => state.notesReducer.notes)\r\n\tconst dispatch = useDispatch()\r\n\r\n\tuseEffect(() => {\r\n\t\tconst items = localStorage.getItem('notes')\r\n\t\tif (items) dispatch(Actions.getNote(JSON.parse(items)))\r\n\t}, [dispatch])\r\n\tuseEffect(() => {\r\n\t\tlocalStorage.setItem('notes', JSON.stringify(notes))\r\n\t}, [notes])\r\n\treturn (\r\n\t\t<div className=''>\r\n\t\t\t{' '}\r\n\t\t\t<SideBar /> <NoteContent />{' '}\r\n\t\t</div>\r\n\t)\r\n}\r\n","import React from 'react'\r\nimport './App.sass'\r\nimport { Notes } from './component/pages/Notes'\r\n\r\nfunction App() {\r\n\treturn (\r\n\t\t<div className='wrapper'>\r\n\t\t\t<Notes />\r\n\t\t</div>\r\n\t)\r\n}\r\n\r\nexport default App\r\n","let db\r\nlet dbReq = indexedDB.open('myDB', 1)\r\n\r\ndbReq.onupgradeneeded = (event) => {\r\n\t// Зададим переменной db ссылку на базу данных\r\n\tdb = event.target.result\r\n\t// Создадим хранилище объектов с именем notes.\r\n\tdb.createObjectStore('notes', { autoIncrement: true })\r\n}\r\ndbReq.onsuccess = (event) => {\r\n\tdb = event.target.result\r\n\r\n\tgetAndDisplayNotes(db)\r\n}\r\n\r\ndbReq.onerror = (event) => {\r\n\talert('error opening database ' + event.target.errorCode)\r\n}\r\n\r\nexport const getAndDisplayNotes = (db) => {\r\n\tlet tx = db.transaction(['notes'], 'readonly')\r\n\tlet store = tx.objectStore('notes')\r\n\r\n\t// Создать запрос курсора\r\n\tlet req = store.openCursor()\r\n\tlet allNotes = []\r\n\r\n\treq.onsuccess = (event) => {\r\n\t\t// Результатом req.onsuccess в запросах openCursor является\r\n\t\t// IDBCursor\r\n\t\tlet cursor = event.target.result\r\n\r\n\t\tif (cursor != null) {\r\n\t\t\tallNotes.push(cursor.value)\r\n\t\t\tcursor.continue()\r\n\t\t} else {\r\n\t\t\t// Если у нас нулевой курсор, это означает, что мы получили\r\n\t\t\t// все данные, поэтому отображаем заметки, которые мы получили.\r\n\t\t\t// console.log(allNotes)\r\n\t\t}\r\n\t}\r\n\r\n\treq.onerror = (event) => {\r\n\t\talert('error in cursor request ' + event.target.errorCode)\r\n\t}\r\n}\r\n\r\nconst addStickyNote = (db, title, content, id) => {\r\n\t// Запустим транзакцию базы данных и получите хранилище объектов Notes\r\n\tlet tx = db.transaction(['notes'], 'readwrite')\r\n\tlet store = tx.objectStore('notes')\r\n\t// Добаляем заметку в хранилище объектов\r\n\tlet note = { title, content, id, timestamp: Date.now() }\r\n\tstore.add(note)\r\n\t// Ожидаем завершения транзакции базы данных\r\n\ttx.oncomplete = () => {\r\n\t\tconsole.log('stored note!')\r\n\t}\r\n\ttx.onerror = (event) => {\r\n\t\talert('error storing note ' + event.target.errorCode)\r\n\t}\r\n}\r\n\r\nexport const submitNote = (id, title, content) => {\r\n\taddStickyNote(db, id, title, content)\r\n\tgetAndDisplayNotes(db)\r\n}\r\n","import {\r\n\tADD_NOTE,\r\n\tDELETE_NOTE,\r\n\tActionsType,\r\n\tPayloadType,\r\n\tSAVE_NOTE,\r\n\tGET_NOTES,\r\n} from './actions'\r\n\r\nlet initialState = {\r\n\tnotes: [] as Array<PayloadType>,\r\n}\r\n\r\ntype InitialStateType = typeof initialState\r\n\r\nexport const Reducer = (state = initialState, action: ActionsType): InitialStateType => {\r\n\tswitch (action.type) {\r\n\t\tcase GET_NOTES:\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\tnotes: action.payload,\r\n\t\t\t}\r\n\t\tcase ADD_NOTE:\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\tnotes: [...state.notes, action.payload],\r\n\t\t\t}\r\n\t\tcase SAVE_NOTE:\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\tnotes: [\r\n\t\t\t\t\t...state.notes.map((item) => {\r\n\t\t\t\t\t\treturn item.id === action.payload.id ? action.payload : item\r\n\t\t\t\t\t}),\r\n\t\t\t\t],\r\n\t\t\t}\r\n\t\tcase DELETE_NOTE:\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\tnotes: [...state.notes.filter((note) => note.id !== action.payload.id)],\r\n\t\t\t}\r\n\t\tdefault:\r\n\t\t\treturn state\r\n\t}\r\n}\r\n","import { combineReducers, createStore, applyMiddleware } from 'redux'\r\nimport thunk from 'redux-thunk'\r\nimport { Reducer } from './reducer'\r\n\r\nconst rootReducer = combineReducers({\r\n\tnotesReducer: Reducer,\r\n})\r\n\r\ntype RootReducerType = typeof rootReducer\r\nexport type AppStateType = ReturnType<RootReducerType>\r\n\r\ntype PropertiesType<T> = T extends {\r\n\t[key: string]: infer U\r\n}\r\n\t? U\r\n\t: never\r\n\r\nexport type InferAtionsType<\r\n\tT extends { [key: string]: (...args: any[]) => any }\r\n> = ReturnType<PropertiesType<T>>\r\n\r\nexport const store = createStore(rootReducer, applyMiddleware(thunk))\r\n","import React from 'react'\r\nimport ReactDOM from 'react-dom'\r\nimport './global.sass'\r\nimport { Provider } from 'react-redux'\r\nimport { HashRouter } from 'react-router-dom'\r\nimport App from './App'\r\nimport { store } from './component/features/Note/models/store'\r\nimport './backend/index'\r\n\r\nReactDOM.render(\r\n\t<HashRouter>\r\n\t\t<Provider store={store}>\r\n\t\t\t<App />\r\n\t\t</Provider>\r\n\t</HashRouter>,\r\n\tdocument.getElementById('root')\r\n)\r\n"],"sourceRoot":""}